<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="15" total="20" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="SmokeTestSuite" duration-ms="41120" started-at="2017-11-20T12:49:28Z" finished-at="2017-11-20T12:50:10Z">
    <groups>
    </groups>
    <test name="CreatePackage" duration-ms="41120" started-at="2017-11-20T12:49:28Z" finished-at="2017-11-20T12:50:10Z">
      <class name="com.test.regression.VerifyTPCreation">
        <test-method status="PASS" signature="verifyTechProfCreation()[pri:0, instance:com.test.regression.VerifyTPCreation@610694f1]" name="verifyTechProfCreation" duration-ms="16" started-at="2017-11-20T18:20:04Z" finished-at="2017-11-20T18:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTechProfCreation -->
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)[pri:0, instance:com.test.regression.VerifyTPCreation@610694f1]" name="getResults" is-config="true" duration-ms="209" started-at="2017-11-20T18:20:04Z" finished-at="2017-11-20T18:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTechProfCreation status=SUCCESS method=VerifyTPCreation.verifyTechProfCreation()[pri:0, instance:com.test.regression.VerifyTPCreation@610694f1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResults -->
      </class> <!-- com.test.regression.VerifyTPCreation -->
      <class name="com.framework.pageObject.Login">
        <test-method status="PASS" signature="extentReports()[pri:0, instance:com.framework.pageObject.Login@23e028a9]" name="extentReports" is-config="true" duration-ms="255" started-at="2017-11-20T18:19:29Z" finished-at="2017-11-20T18:19:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentReports -->
        <test-method status="PASS" signature="setUpApplication(java.lang.String)[pri:0, instance:com.framework.pageObject.Login@23e028a9]" name="setUpApplication" is-config="true" duration-ms="11586" started-at="2017-11-20T18:19:29Z" depends-on-methods="com.framework.testbase.TestBsae.loadPropertiesFile" finished-at="2017-11-20T18:19:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpApplication -->
        <test-method status="PASS" signature="loadPropertiesFile()[pri:0, instance:com.framework.pageObject.Login@23e028a9]" name="loadPropertiesFile" is-config="true" duration-ms="0" started-at="2017-11-20T18:19:29Z" finished-at="2017-11-20T18:19:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loadPropertiesFile -->
        <test-method status="PASS" signature="login()[pri:0, instance:com.framework.pageObject.Login@23e028a9]" name="login" duration-ms="8839" started-at="2017-11-20T18:19:40Z" description="Log in to portal" finished-at="2017-11-20T18:19:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)[pri:0, instance:com.framework.pageObject.Login@23e028a9]" name="getResults" is-config="true" duration-ms="723" started-at="2017-11-20T18:19:49Z" finished-at="2017-11-20T18:19:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=Login.login()[pri:0, instance:com.framework.pageObject.Login@23e028a9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResults -->
        <test-method status="PASS" signature="closeApplication()[pri:0, instance:com.framework.pageObject.Login@23e028a9]" name="closeApplication" is-config="true" duration-ms="3545" started-at="2017-11-20T18:20:05Z" finished-at="2017-11-20T18:20:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method status="PASS" signature="endExtendedReport()[pri:0, instance:com.framework.pageObject.Login@23e028a9]" name="endExtendedReport" is-config="true" duration-ms="1374" started-at="2017-11-20T18:20:08Z" finished-at="2017-11-20T18:20:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endExtendedReport -->
      </class> <!-- com.framework.pageObject.Login -->
      <class name="com.framework.pageObject.Logout">
        <test-method status="PASS" signature="logOut()[pri:0, instance:com.framework.pageObject.Logout@43814d18]" name="logOut" duration-ms="359" started-at="2017-11-20T18:20:04Z" description="Logging out from Portal" finished-at="2017-11-20T18:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOut -->
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)[pri:0, instance:com.framework.pageObject.Logout@43814d18]" name="getResults" is-config="true" duration-ms="37" started-at="2017-11-20T18:20:05Z" finished-at="2017-11-20T18:20:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logOut status=SUCCESS method=Logout.logOut()[pri:0, instance:com.framework.pageObject.Logout@43814d18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResults -->
      </class> <!-- com.framework.pageObject.Logout -->
      <class name="com.test.regression.VerifySIMPackege">
        <test-method status="PASS" signature="simPackageHome()[pri:0, instance:com.test.regression.VerifySIMPackege@5ae63ade]" name="simPackageHome" duration-ms="981" started-at="2017-11-20T18:19:50Z" finished-at="2017-11-20T18:19:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simPackageHome -->
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)[pri:0, instance:com.test.regression.VerifySIMPackege@5ae63ade]" name="getResults" is-config="true" duration-ms="322" started-at="2017-11-20T18:19:51Z" finished-at="2017-11-20T18:19:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=simPackageHome status=SUCCESS method=VerifySIMPackege.simPackageHome()[pri:0, instance:com.test.regression.VerifySIMPackege@5ae63ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResults -->
        <test-method status="FAIL" signature="createPackage(java.lang.String)[pri:0, instance:com.test.regression.VerifySIMPackege@5ae63ade]" name="createPackage" duration-ms="1092" started-at="2017-11-20T18:19:51Z" depends-on-methods="com.test.regression.VerifySIMPackege.simPackageHome" finished-at="2017-11-20T18:19:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Testpackage]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at com.test.regression.VerifySIMPackege.createPackage(VerifySIMPackege.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPackage -->
        <test-method status="PASS" signature="getResults(org.testng.ITestResult)[pri:0, instance:com.test.regression.VerifySIMPackege@5ae63ade]" name="getResults" is-config="true" duration-ms="11662" started-at="2017-11-20T18:19:52Z" finished-at="2017-11-20T18:20:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createPackage status=FAILURE method=VerifySIMPackege.createPackage(java.lang.String)[pri:0, instance:com.test.regression.VerifySIMPackege@5ae63ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResults -->
      </class> <!-- com.test.regression.VerifySIMPackege -->
    </test> <!-- CreatePackage -->
  </suite> <!-- SmokeTestSuite -->
</testng-results>
